{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Intel\\\\Desktop\\\\programs\\\\scriptGuru\\\\trello\\\\src\\\\home\\\\TeamCollaborationBoard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\n// Priority colors\nconst PRIORITY_COLORS = {\n  Low: \"#28a745\",\n  Medium: \"#ffc107\",\n  High: \"#dc3545\"\n};\n\n// Board component\n// const Board = ({ board, onSelect, isSelected }) => (\n//   <div\n//     style={{\n//       ...styles.boardItem,\n//       ...(isSelected ? styles.boardItemSelected : {}),\n//     }}\n//     onClick={() => onSelect(board)}\n//   >\n//     <h4>{board.name}</h4>\n//     {board.description && <p>{board.description}</p>}\n//   </div>\n// );\n\n// Task component\n// const Task = ({ task, onUpdate, onDelete }) => {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editData, setEditData] = useState({\n//     title: task.title,\n//     description: task.description,\n//     priority: task.priority,\n//     assignedTo: task.assignedTo,\n//     dueDate: task.dueDate ? task.dueDate.split(\"T\")[0] : \"\",\n//   });\n\n//   const handleSave = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE}/tasks/${task._id}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(editData),\n//       });\n\n//       if (response.ok) {\n//         const updatedTask = await response.json();\n//         onUpdate(updatedTask);\n//         setIsEditing(false);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating task:\", error);\n//     }\n//   };\n\n//   const handleStatusChange = async (newStatus) => {\n//     try {\n//       const response = await fetch(`${API_BASE}/tasks/${task._id}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ status: newStatus }),\n//       });\n\n//       if (response.ok) {\n//         const updatedTask = await response.json();\n//         onUpdate(updatedTask);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating task status:\", error);\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     if (window.confirm(\"Are you sure you want to delete this task?\")) {\n//       try {\n//         await fetch(`${API_BASE}/tasks/${task._id}`, { method: \"DELETE\" });\n//         onDelete(task._id);\n//       } catch (error) {\n//         console.error(\"Error deleting task:\", error);\n//       }\n//     }\n//   };\n\n//   if (isEditing) {\n//     return (\n//       <div style={{ ...styles.task, ...styles.taskEditing }}>\n//         <input\n//           type=\"text\"\n//           value={editData.title}\n//           onChange={(e) => setEditData({ ...editData, title: e.target.value })}\n//           placeholder=\"Task title\"\n//           style={styles.input}\n//         />\n//         <textarea\n//           value={editData.description}\n//           onChange={(e) =>\n//             setEditData({ ...editData, description: e.target.value })\n//           }\n//           placeholder=\"Description\"\n//           style={styles.textarea}\n//         />\n//         <select\n//           value={editData.priority}\n//           onChange={(e) =>\n//             setEditData({ ...editData, priority: e.target.value })\n//           }\n//           style={styles.select}\n//         >\n//           <option value=\"Low\">Low</option>\n//           <option value=\"Medium\">Medium</option>\n//           <option value=\"High\">High</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={editData.assignedTo}\n//           onChange={(e) =>\n//             setEditData({ ...editData, assignedTo: e.target.value })\n//           }\n//           placeholder=\"Assigned to\"\n//           style={styles.input}\n//         />\n//         <input\n//           type=\"date\"\n//           value={editData.dueDate}\n//           onChange={(e) =>\n//             setEditData({ ...editData, dueDate: e.target.value })\n//           }\n//           style={styles.input}\n//         />\n//         <div style={styles.taskActions}>\n//           <button onClick={handleSave} style={styles.button}>\n//             Save\n//           </button>\n//           <button\n//             onClick={() => setIsEditing(false)}\n//             style={styles.buttonSecondary}\n//           >\n//             Cancel\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.task}>\n//       <div style={styles.taskHeader}>\n//         <h4>{task.title}</h4>\n//         <span\n//           style={{\n//             ...styles.priorityBadge,\n//             backgroundColor: PRIORITY_COLORS[task.priority],\n//           }}\n//         >\n//           {task.priority}\n//         </span>\n//       </div>\n//       {task.description && <p>{task.description}</p>}\n//       {task.assignedTo && (\n//         <div style={styles.assignedTo}>👤 {task.assignedTo}</div>\n//       )}\n//       {task.dueDate && (\n//         <div style={styles.dueDate}>\n//           📅 {new Date(task.dueDate).toLocaleDateString()}\n//         </div>\n//       )}\n\n//       <div style={styles.taskControls}>\n//         <select\n//           value={task.status}\n//           onChange={(e) => handleStatusChange(e.target.value)}\n//           style={styles.select}\n//         >\n//           <option value=\"To Do\">To Do</option>\n//           <option value=\"In Progress\">In Progress</option>\n//           <option value=\"Done\">Done</option>\n//         </select>\n//         <button onClick={() => setIsEditing(true)} style={styles.button}>\n//           Edit\n//         </button>\n//         <button onClick={handleDelete} style={styles.buttonDanger}>\n//           Delete\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// Column component\nconst Column = ({\n  title,\n  tasks,\n  onUpdateTask,\n  onDeleteTask\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.column,\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.tasks,\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onUpdate: onUpdateTask,\n      onDelete: onDeleteTask\n    }, task._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 190,\n  columnNumber: 3\n}, this);\n\n// New Task Form\n_c = Column;\nconst NewTaskForm = ({\n  boardId,\n  onTaskCreated\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [taskData, setTaskData] = useState({\n    title: \"\",\n    description: \"\",\n    status: \"To Do\",\n    priority: \"Medium\",\n    assignedTo: \"\",\n    dueDate: \"\"\n  });\n  const handleSubmit = async () => {\n    if (!taskData.title.trim()) return;\n    try {\n      const response = await fetch(`${API_BASE}/boards/${boardId}/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(taskData)\n      });\n      if (response.ok) {\n        const newTask = await response.json();\n        onTaskCreated(newTask);\n        setTaskData({\n          title: \"\",\n          description: \"\",\n          status: \"To Do\",\n          priority: \"Medium\",\n          assignedTo: \"\",\n          dueDate: \"\"\n        });\n        setIsOpen(false);\n      }\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n    }\n  };\n  if (!isOpen) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.newTaskBtn,\n      onClick: () => setIsOpen(true),\n      children: \"+ Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.newTaskForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskData.title,\n      onChange: e => setTaskData({\n        ...taskData,\n        title: e.target.value\n      }),\n      placeholder: \"Task title\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: taskData.description,\n      onChange: e => setTaskData({\n        ...taskData,\n        description: e.target.value\n      }),\n      placeholder: \"Description\",\n      style: styles.textarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: taskData.status,\n      onChange: e => setTaskData({\n        ...taskData,\n        status: e.target.value\n      }),\n      style: styles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"To Do\",\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"In Progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Done\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: taskData.priority,\n      onChange: e => setTaskData({\n        ...taskData,\n        priority: e.target.value\n      }),\n      style: styles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"High\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskData.assignedTo,\n      onChange: e => setTaskData({\n        ...taskData,\n        assignedTo: e.target.value\n      }),\n      placeholder: \"Assigned to\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: taskData.dueDate,\n      onChange: e => setTaskData({\n        ...taskData,\n        dueDate: e.target.value\n      }),\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: styles.button,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(false),\n        style: styles.buttonSecondary,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n\n// New Board Form\n_s(NewTaskForm, \"+x58WQ2FfLBHGia7Mqun71fkpdI=\");\n_c2 = NewTaskForm;\nconst NewBoardForm = ({\n  onBoardCreated\n}) => {\n  _s2();\n  const [isOpen, setIsOpen] = useState(false);\n  const [boardData, setBoardData] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const handleSubmit = async () => {\n    if (!boardData.name.trim()) return;\n    try {\n      const response = await fetch(`${API_BASE}/boards`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(boardData)\n      });\n      if (response.ok) {\n        const newBoard = await response.json();\n        onBoardCreated(newBoard);\n        setBoardData({\n          name: \"\",\n          description: \"\"\n        });\n        setIsOpen(false);\n      }\n    } catch (error) {\n      console.error(\"Error creating board:\", error);\n    }\n  };\n  if (!isOpen) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.newBoardBtn,\n      onClick: () => setIsOpen(true),\n      children: \"+ New Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.newBoardForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: boardData.name,\n      onChange: e => setBoardData({\n        ...boardData,\n        name: e.target.value\n      }),\n      placeholder: \"Board name\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: boardData.description,\n      onChange: e => setBoardData({\n        ...boardData,\n        description: e.target.value\n      }),\n      placeholder: \"Board description\",\n      style: styles.textarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: styles.button,\n        children: \"Create Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(false),\n        style: styles.buttonSecondary,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s2(NewBoardForm, \"zTVxOH8kJ+aR3Z5eRnrydWs6x0I=\");\n_c3 = NewBoardForm;\nconst TeamCollaborationBoard = () => {\n  _s3();\n  const [boards, setBoards] = useState([]);\n  const [selectedBoard, setSelectedBoard] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  // Load boards on mount\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await fetch(`${API_BASE}/boards`);\n        const data = await response.json();\n        setBoards(data);\n\n        // Auto-select first board if available\n        if (data.length > 0 && !selectedBoard) {\n          setSelectedBoard(data[0]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching boards:\", error);\n      }\n    };\n    fetchBoards();\n  }, [selectedBoard]);\n\n  // Load tasks when board is selected\n  useEffect(() => {\n    if (selectedBoard) {\n      const fetchTasks = async () => {\n        try {\n          const response = await fetch(`${API_BASE}/boards/${selectedBoard._id}/tasks`);\n          const data = await response.json();\n          setTasks(data);\n        } catch (error) {\n          console.error(\"Error fetching tasks:\", error);\n        }\n      };\n      fetchTasks();\n    }\n  }, [selectedBoard]);\n  const handleBoardSelect = board => {\n    setSelectedBoard(board);\n  };\n  const handleBoardCreated = newBoard => {\n    setBoards([newBoard, ...boards]);\n    setSelectedBoard(newBoard);\n  };\n  const handleTaskCreated = newTask => {\n    setTasks([newTask, ...tasks]);\n  };\n  const handleTaskUpdate = updatedTask => {\n    setTasks(tasks.map(task => task._id === updatedTask._id ? updatedTask : task));\n  };\n  const handleTaskDelete = taskId => {\n    setTasks(tasks.filter(task => task._id !== taskId));\n  };\n  const todoTasks = tasks.filter(task => task.status === \"To Do\");\n  const inProgressTasks = tasks.filter(task => task.status === \"In Progress\");\n  const doneTasks = tasks.filter(task => task.status === \"Done\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.sidebar,\n        ...(sidebarOpen ? styles.sidebarOpen : styles.sidebarClosed)\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sidebarHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.sidebarToggle,\n          onClick: () => setSidebarOpen(!sidebarOpen),\n          children: sidebarOpen ? \"←\" : \"→\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), sidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sidebarContent,\n        children: [/*#__PURE__*/_jsxDEV(NewBoardForm, {\n          onBoardCreated: handleBoardCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.boardsList,\n          children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n            board: board,\n            onSelect: handleBoardSelect,\n            isSelected: (selectedBoard === null || selectedBoard === void 0 ? void 0 : selectedBoard._id) === board._id\n          }, board._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainContent,\n      children: selectedBoard ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.boardHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: selectedBoard.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), selectedBoard.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedBoard.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n            boardId: selectedBoard._id,\n            onTaskCreated: handleTaskCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.boardColumns,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"To Do\",\n            tasks: todoTasks,\n            onUpdateTask: handleTaskUpdate,\n            onDeleteTask: handleTaskDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"In Progress\",\n            tasks: inProgressTasks,\n            onUpdateTask: handleTaskUpdate,\n            onDeleteTask: handleTaskDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Done\",\n            tasks: doneTasks,\n            onUpdateTask: handleTaskUpdate,\n            onDeleteTask: handleTaskDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.noBoard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Team Collaboration Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a board from the sidebar or create a new one to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n};\n_s3(TeamCollaborationBoard, \"WeiVJGUR4O7Wwfb3NZ67cVE4+vk=\");\n_c4 = TeamCollaborationBoard;\nconst styles = {\n  app: {\n    display: \"flex\",\n    height: \"100vh\",\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f5f5f5\"\n  },\n  sidebar: {\n    backgroundColor: \"#2c3e50\",\n    color: \"white\",\n    transition: \"width 0.3s ease\"\n  },\n  sidebarOpen: {\n    width: \"300px\"\n  },\n  sidebarClosed: {\n    width: \"60px\"\n  },\n  sidebarHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    borderBottom: \"1px solid #34495e\"\n  },\n  sidebarToggle: {\n    background: \"none\",\n    border: \"none\",\n    color: \"white\",\n    fontSize: \"18px\",\n    cursor: \"pointer\"\n  },\n  sidebarContent: {\n    padding: \"20px\"\n  },\n  boardsList: {\n    marginTop: \"20px\"\n  },\n  boardItem: {\n    padding: \"15px\",\n    margin: \"10px 0\",\n    backgroundColor: \"#34495e\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.2s\"\n  },\n  boardItemSelected: {\n    backgroundColor: \"#3498db\"\n  },\n  mainContent: {\n    flex: 1,\n    padding: \"20px\",\n    overflow: \"auto\"\n  },\n  boardHeader: {\n    marginBottom: \"30px\"\n  },\n  boardColumns: {\n    display: \"flex\",\n    gap: \"20px\",\n    height: \"calc(100vh - 200px)\"\n  },\n  column: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    borderRadius: \"8px\",\n    padding: \"20px\",\n    minHeight: \"500px\"\n  },\n  tasks: {\n    marginTop: \"15px\"\n  },\n  task: {\n    backgroundColor: \"white\",\n    padding: \"15px\",\n    marginBottom: \"10px\",\n    borderRadius: \"5px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n  },\n  taskEditing: {\n    border: \"2px solid #3498db\"\n  },\n  taskHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  },\n  priorityBadge: {\n    padding: \"4px 8px\",\n    borderRadius: \"12px\",\n    fontSize: \"12px\",\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  assignedTo: {\n    fontSize: \"14px\",\n    color: \"#666\",\n    marginBottom: \"5px\"\n  },\n  dueDate: {\n    fontSize: \"14px\",\n    color: \"#666\",\n    marginBottom: \"10px\"\n  },\n  taskControls: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"10px\"\n  },\n  taskActions: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"10px\"\n  },\n  newTaskBtn: {\n    backgroundColor: \"#27ae60\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"12px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\"\n  },\n  newBoardBtn: {\n    backgroundColor: \"#3498db\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"12px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n    width: \"100%\"\n  },\n  newTaskForm: {\n    backgroundColor: \"white\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n    marginBottom: \"20px\"\n  },\n  newBoardForm: {\n    backgroundColor: \"#34495e\",\n    padding: \"15px\",\n    borderRadius: \"5px\",\n    marginBottom: \"20px\"\n  },\n  input: {\n    width: \"100%\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\"\n  },\n  textarea: {\n    width: \"100%\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n    minHeight: \"80px\",\n    resize: \"vertical\"\n  },\n  select: {\n    padding: \"8px\",\n    marginRight: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\"\n  },\n  formActions: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    backgroundColor: \"#3498db\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\"\n  },\n  buttonSecondary: {\n    backgroundColor: \"#95a5a6\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\"\n  },\n  buttonDanger: {\n    backgroundColor: \"#e74c3c\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\"\n  },\n  noBoard: {\n    textAlign: \"center\",\n    padding: \"50px\",\n    color: \"#7f8c8d\"\n  }\n};\nexport default TeamCollaborationBoard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Column\");\n$RefreshReg$(_c2, \"NewTaskForm\");\n$RefreshReg$(_c3, \"NewBoardForm\");\n$RefreshReg$(_c4, \"TeamCollaborationBoard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","PRIORITY_COLORS","Low","Medium","High","Column","title","tasks","onUpdateTask","onDeleteTask","style","styles","column","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","Task","onUpdate","onDelete","_id","_c","NewTaskForm","boardId","onTaskCreated","_s","isOpen","setIsOpen","taskData","setTaskData","description","status","priority","assignedTo","dueDate","handleSubmit","trim","response","fetch","method","headers","body","JSON","stringify","ok","newTask","json","error","console","newTaskBtn","onClick","newTaskForm","type","value","onChange","e","target","placeholder","input","textarea","select","formActions","button","buttonSecondary","_c2","NewBoardForm","onBoardCreated","_s2","boardData","setBoardData","name","newBoard","newBoardBtn","newBoardForm","_c3","TeamCollaborationBoard","_s3","boards","setBoards","selectedBoard","setSelectedBoard","setTasks","sidebarOpen","setSidebarOpen","fetchBoards","data","length","fetchTasks","handleBoardSelect","board","handleBoardCreated","handleTaskCreated","handleTaskUpdate","updatedTask","handleTaskDelete","taskId","filter","todoTasks","inProgressTasks","doneTasks","app","sidebar","sidebarClosed","sidebarHeader","sidebarToggle","sidebarContent","boardsList","Board","onSelect","isSelected","mainContent","boardHeader","boardColumns","noBoard","_c4","display","height","fontFamily","backgroundColor","color","transition","width","justifyContent","alignItems","padding","borderBottom","background","border","fontSize","cursor","marginTop","boardItem","margin","borderRadius","boardItemSelected","flex","overflow","marginBottom","gap","minHeight","boxShadow","taskEditing","taskHeader","priorityBadge","fontWeight","taskControls","taskActions","resize","marginRight","buttonDanger","textAlign","$RefreshReg$"],"sources":["C:/Users/Intel/Desktop/programs/scriptGuru/trello/src/home/TeamCollaborationBoard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst API_BASE = \"http://localhost:5000\";\r\n\r\n// Priority colors\r\nconst PRIORITY_COLORS = {\r\n  Low: \"#28a745\",\r\n  Medium: \"#ffc107\",\r\n  High: \"#dc3545\",\r\n};\r\n\r\n// Board component\r\n// const Board = ({ board, onSelect, isSelected }) => (\r\n//   <div\r\n//     style={{\r\n//       ...styles.boardItem,\r\n//       ...(isSelected ? styles.boardItemSelected : {}),\r\n//     }}\r\n//     onClick={() => onSelect(board)}\r\n//   >\r\n//     <h4>{board.name}</h4>\r\n//     {board.description && <p>{board.description}</p>}\r\n//   </div>\r\n// );\r\n\r\n// Task component\r\n// const Task = ({ task, onUpdate, onDelete }) => {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editData, setEditData] = useState({\r\n//     title: task.title,\r\n//     description: task.description,\r\n//     priority: task.priority,\r\n//     assignedTo: task.assignedTo,\r\n//     dueDate: task.dueDate ? task.dueDate.split(\"T\")[0] : \"\",\r\n//   });\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       const response = await fetch(`${API_BASE}/tasks/${task._id}`, {\r\n//         method: \"PUT\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(editData),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const updatedTask = await response.json();\r\n//         onUpdate(updatedTask);\r\n//         setIsEditing(false);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error updating task:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleStatusChange = async (newStatus) => {\r\n//     try {\r\n//       const response = await fetch(`${API_BASE}/tasks/${task._id}`, {\r\n//         method: \"PUT\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ status: newStatus }),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const updatedTask = await response.json();\r\n//         onUpdate(updatedTask);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error updating task status:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async () => {\r\n//     if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n//       try {\r\n//         await fetch(`${API_BASE}/tasks/${task._id}`, { method: \"DELETE\" });\r\n//         onDelete(task._id);\r\n//       } catch (error) {\r\n//         console.error(\"Error deleting task:\", error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   if (isEditing) {\r\n//     return (\r\n//       <div style={{ ...styles.task, ...styles.taskEditing }}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={editData.title}\r\n//           onChange={(e) => setEditData({ ...editData, title: e.target.value })}\r\n//           placeholder=\"Task title\"\r\n//           style={styles.input}\r\n//         />\r\n//         <textarea\r\n//           value={editData.description}\r\n//           onChange={(e) =>\r\n//             setEditData({ ...editData, description: e.target.value })\r\n//           }\r\n//           placeholder=\"Description\"\r\n//           style={styles.textarea}\r\n//         />\r\n//         <select\r\n//           value={editData.priority}\r\n//           onChange={(e) =>\r\n//             setEditData({ ...editData, priority: e.target.value })\r\n//           }\r\n//           style={styles.select}\r\n//         >\r\n//           <option value=\"Low\">Low</option>\r\n//           <option value=\"Medium\">Medium</option>\r\n//           <option value=\"High\">High</option>\r\n//         </select>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={editData.assignedTo}\r\n//           onChange={(e) =>\r\n//             setEditData({ ...editData, assignedTo: e.target.value })\r\n//           }\r\n//           placeholder=\"Assigned to\"\r\n//           style={styles.input}\r\n//         />\r\n//         <input\r\n//           type=\"date\"\r\n//           value={editData.dueDate}\r\n//           onChange={(e) =>\r\n//             setEditData({ ...editData, dueDate: e.target.value })\r\n//           }\r\n//           style={styles.input}\r\n//         />\r\n//         <div style={styles.taskActions}>\r\n//           <button onClick={handleSave} style={styles.button}>\r\n//             Save\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setIsEditing(false)}\r\n//             style={styles.buttonSecondary}\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div style={styles.task}>\r\n//       <div style={styles.taskHeader}>\r\n//         <h4>{task.title}</h4>\r\n//         <span\r\n//           style={{\r\n//             ...styles.priorityBadge,\r\n//             backgroundColor: PRIORITY_COLORS[task.priority],\r\n//           }}\r\n//         >\r\n//           {task.priority}\r\n//         </span>\r\n//       </div>\r\n//       {task.description && <p>{task.description}</p>}\r\n//       {task.assignedTo && (\r\n//         <div style={styles.assignedTo}>👤 {task.assignedTo}</div>\r\n//       )}\r\n//       {task.dueDate && (\r\n//         <div style={styles.dueDate}>\r\n//           📅 {new Date(task.dueDate).toLocaleDateString()}\r\n//         </div>\r\n//       )}\r\n\r\n//       <div style={styles.taskControls}>\r\n//         <select\r\n//           value={task.status}\r\n//           onChange={(e) => handleStatusChange(e.target.value)}\r\n//           style={styles.select}\r\n//         >\r\n//           <option value=\"To Do\">To Do</option>\r\n//           <option value=\"In Progress\">In Progress</option>\r\n//           <option value=\"Done\">Done</option>\r\n//         </select>\r\n//         <button onClick={() => setIsEditing(true)} style={styles.button}>\r\n//           Edit\r\n//         </button>\r\n//         <button onClick={handleDelete} style={styles.buttonDanger}>\r\n//           Delete\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// Column component\r\nconst Column = ({ title, tasks, onUpdateTask, onDeleteTask }) => (\r\n  <div style={styles.column}>\r\n    <h3>{title}</h3>\r\n    <div style={styles.tasks}>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task._id}\r\n          task={task}\r\n          onUpdate={onUpdateTask}\r\n          onDelete={onDeleteTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// New Task Form\r\nconst NewTaskForm = ({ boardId, onTaskCreated }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [taskData, setTaskData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    status: \"To Do\",\r\n    priority: \"Medium\",\r\n    assignedTo: \"\",\r\n    dueDate: \"\",\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    if (!taskData.title.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE}/boards/${boardId}/tasks`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(taskData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newTask = await response.json();\r\n        onTaskCreated(newTask);\r\n        setTaskData({\r\n          title: \"\",\r\n          description: \"\",\r\n          status: \"To Do\",\r\n          priority: \"Medium\",\r\n          assignedTo: \"\",\r\n          dueDate: \"\",\r\n        });\r\n        setIsOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating task:\", error);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return (\r\n      <button style={styles.newTaskBtn} onClick={() => setIsOpen(true)}>\r\n        + Add New Task\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={styles.newTaskForm}>\r\n      <input\r\n        type=\"text\"\r\n        value={taskData.title}\r\n        onChange={(e) => setTaskData({ ...taskData, title: e.target.value })}\r\n        placeholder=\"Task title\"\r\n        style={styles.input}\r\n      />\r\n      <textarea\r\n        value={taskData.description}\r\n        onChange={(e) =>\r\n          setTaskData({ ...taskData, description: e.target.value })\r\n        }\r\n        placeholder=\"Description\"\r\n        style={styles.textarea}\r\n      />\r\n      <select\r\n        value={taskData.status}\r\n        onChange={(e) => setTaskData({ ...taskData, status: e.target.value })}\r\n        style={styles.select}\r\n      >\r\n        <option value=\"To Do\">To Do</option>\r\n        <option value=\"In Progress\">In Progress</option>\r\n        <option value=\"Done\">Done</option>\r\n      </select>\r\n      <select\r\n        value={taskData.priority}\r\n        onChange={(e) => setTaskData({ ...taskData, priority: e.target.value })}\r\n        style={styles.select}\r\n      >\r\n        <option value=\"Low\">Low</option>\r\n        <option value=\"Medium\">Medium</option>\r\n        <option value=\"High\">High</option>\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        value={taskData.assignedTo}\r\n        onChange={(e) =>\r\n          setTaskData({ ...taskData, assignedTo: e.target.value })\r\n        }\r\n        placeholder=\"Assigned to\"\r\n        style={styles.input}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        value={taskData.dueDate}\r\n        onChange={(e) => setTaskData({ ...taskData, dueDate: e.target.value })}\r\n        style={styles.input}\r\n      />\r\n      <div style={styles.formActions}>\r\n        <button onClick={handleSubmit} style={styles.button}>\r\n          Create Task\r\n        </button>\r\n        <button onClick={() => setIsOpen(false)} style={styles.buttonSecondary}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// New Board Form\r\nconst NewBoardForm = ({ onBoardCreated }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [boardData, setBoardData] = useState({ name: \"\", description: \"\" });\r\n\r\n  const handleSubmit = async () => {\r\n    if (!boardData.name.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE}/boards`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(boardData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newBoard = await response.json();\r\n        onBoardCreated(newBoard);\r\n        setBoardData({ name: \"\", description: \"\" });\r\n        setIsOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating board:\", error);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return (\r\n      <button style={styles.newBoardBtn} onClick={() => setIsOpen(true)}>\r\n        + New Board\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={styles.newBoardForm}>\r\n      <input\r\n        type=\"text\"\r\n        value={boardData.name}\r\n        onChange={(e) => setBoardData({ ...boardData, name: e.target.value })}\r\n        placeholder=\"Board name\"\r\n        style={styles.input}\r\n      />\r\n      <textarea\r\n        value={boardData.description}\r\n        onChange={(e) =>\r\n          setBoardData({ ...boardData, description: e.target.value })\r\n        }\r\n        placeholder=\"Board description\"\r\n        style={styles.textarea}\r\n      />\r\n      <div style={styles.formActions}>\r\n        <button onClick={handleSubmit} style={styles.button}>\r\n          Create Board\r\n        </button>\r\n        <button onClick={() => setIsOpen(false)} style={styles.buttonSecondary}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamCollaborationBoard = () => {\r\n  const [boards, setBoards] = useState([]);\r\n  const [selectedBoard, setSelectedBoard] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  // Load boards on mount\r\n  useEffect(() => {\r\n    const fetchBoards = async () => {\r\n      try {\r\n        const response = await fetch(`${API_BASE}/boards`);\r\n        const data = await response.json();\r\n        setBoards(data);\r\n\r\n        // Auto-select first board if available\r\n        if (data.length > 0 && !selectedBoard) {\r\n          setSelectedBoard(data[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching boards:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBoards();\r\n  }, [selectedBoard]);\r\n\r\n  // Load tasks when board is selected\r\n  useEffect(() => {\r\n    if (selectedBoard) {\r\n      const fetchTasks = async () => {\r\n        try {\r\n          const response = await fetch(\r\n            `${API_BASE}/boards/${selectedBoard._id}/tasks`\r\n          );\r\n          const data = await response.json();\r\n          setTasks(data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching tasks:\", error);\r\n        }\r\n      };\r\n\r\n      fetchTasks();\r\n    }\r\n  }, [selectedBoard]);\r\n\r\n  const handleBoardSelect = (board) => {\r\n    setSelectedBoard(board);\r\n  };\r\n\r\n  const handleBoardCreated = (newBoard) => {\r\n    setBoards([newBoard, ...boards]);\r\n    setSelectedBoard(newBoard);\r\n  };\r\n\r\n  const handleTaskCreated = (newTask) => {\r\n    setTasks([newTask, ...tasks]);\r\n  };\r\n\r\n  const handleTaskUpdate = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task._id === updatedTask._id ? updatedTask : task))\r\n    );\r\n  };\r\n\r\n  const handleTaskDelete = (taskId) => {\r\n    setTasks(tasks.filter((task) => task._id !== taskId));\r\n  };\r\n\r\n  const todoTasks = tasks.filter((task) => task.status === \"To Do\");\r\n  const inProgressTasks = tasks.filter((task) => task.status === \"In Progress\");\r\n  const doneTasks = tasks.filter((task) => task.status === \"Done\");\r\n\r\n  return (\r\n    <div style={styles.app}>\r\n      <div\r\n        style={{\r\n          ...styles.sidebar,\r\n          ...(sidebarOpen ? styles.sidebarOpen : styles.sidebarClosed),\r\n        }}\r\n      >\r\n        <div style={styles.sidebarHeader}>\r\n          <h2>Boards</h2>\r\n          <button\r\n            style={styles.sidebarToggle}\r\n            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n          >\r\n            {sidebarOpen ? \"←\" : \"→\"}\r\n          </button>\r\n        </div>\r\n\r\n        {sidebarOpen && (\r\n          <div style={styles.sidebarContent}>\r\n            <NewBoardForm onBoardCreated={handleBoardCreated} />\r\n            <div style={styles.boardsList}>\r\n              {boards.map((board) => (\r\n                <Board\r\n                  key={board._id}\r\n                  board={board}\r\n                  onSelect={handleBoardSelect}\r\n                  isSelected={selectedBoard?._id === board._id}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={styles.mainContent}>\r\n        {selectedBoard ? (\r\n          <>\r\n            <div style={styles.boardHeader}>\r\n              <h1>{selectedBoard.name}</h1>\r\n              {selectedBoard.description && <p>{selectedBoard.description}</p>}\r\n              <NewTaskForm\r\n                boardId={selectedBoard._id}\r\n                onTaskCreated={handleTaskCreated}\r\n              />\r\n            </div>\r\n\r\n            <div style={styles.boardColumns}>\r\n              <Column\r\n                title=\"To Do\"\r\n                tasks={todoTasks}\r\n                onUpdateTask={handleTaskUpdate}\r\n                onDeleteTask={handleTaskDelete}\r\n              />\r\n              <Column\r\n                title=\"In Progress\"\r\n                tasks={inProgressTasks}\r\n                onUpdateTask={handleTaskUpdate}\r\n                onDeleteTask={handleTaskDelete}\r\n              />\r\n              <Column\r\n                title=\"Done\"\r\n                tasks={doneTasks}\r\n                onUpdateTask={handleTaskUpdate}\r\n                onDeleteTask={handleTaskDelete}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div style={styles.noBoard}>\r\n            <h2>Welcome to Team Collaboration Board</h2>\r\n            <p>\r\n              Select a board from the sidebar or create a new one to get\r\n              started!\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  app: {\r\n    display: \"flex\",\r\n    height: \"100vh\",\r\n    fontFamily: \"Arial, sans-serif\",\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n  sidebar: {\r\n    backgroundColor: \"#2c3e50\",\r\n    color: \"white\",\r\n    transition: \"width 0.3s ease\",\r\n  },\r\n  sidebarOpen: {\r\n    width: \"300px\",\r\n  },\r\n  sidebarClosed: {\r\n    width: \"60px\",\r\n  },\r\n  sidebarHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"20px\",\r\n    borderBottom: \"1px solid #34495e\",\r\n  },\r\n  sidebarToggle: {\r\n    background: \"none\",\r\n    border: \"none\",\r\n    color: \"white\",\r\n    fontSize: \"18px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  sidebarContent: {\r\n    padding: \"20px\",\r\n  },\r\n  boardsList: {\r\n    marginTop: \"20px\",\r\n  },\r\n  boardItem: {\r\n    padding: \"15px\",\r\n    margin: \"10px 0\",\r\n    backgroundColor: \"#34495e\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    transition: \"background-color 0.2s\",\r\n  },\r\n  boardItemSelected: {\r\n    backgroundColor: \"#3498db\",\r\n  },\r\n  mainContent: {\r\n    flex: 1,\r\n    padding: \"20px\",\r\n    overflow: \"auto\",\r\n  },\r\n  boardHeader: {\r\n    marginBottom: \"30px\",\r\n  },\r\n  boardColumns: {\r\n    display: \"flex\",\r\n    gap: \"20px\",\r\n    height: \"calc(100vh - 200px)\",\r\n  },\r\n  column: {\r\n    flex: 1,\r\n    backgroundColor: \"#ecf0f1\",\r\n    borderRadius: \"8px\",\r\n    padding: \"20px\",\r\n    minHeight: \"500px\",\r\n  },\r\n  tasks: {\r\n    marginTop: \"15px\",\r\n  },\r\n  task: {\r\n    backgroundColor: \"white\",\r\n    padding: \"15px\",\r\n    marginBottom: \"10px\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n  },\r\n  taskEditing: {\r\n    border: \"2px solid #3498db\",\r\n  },\r\n  taskHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  priorityBadge: {\r\n    padding: \"4px 8px\",\r\n    borderRadius: \"12px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  assignedTo: {\r\n    fontSize: \"14px\",\r\n    color: \"#666\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  dueDate: {\r\n    fontSize: \"14px\",\r\n    color: \"#666\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  taskControls: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  taskActions: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  newTaskBtn: {\r\n    backgroundColor: \"#27ae60\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"12px 20px\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"16px\",\r\n  },\r\n  newBoardBtn: {\r\n    backgroundColor: \"#3498db\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"12px 20px\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"16px\",\r\n    width: \"100%\",\r\n  },\r\n  newTaskForm: {\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  newBoardForm: {\r\n    backgroundColor: \"#34495e\",\r\n    padding: \"15px\",\r\n    borderRadius: \"5px\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"4px\",\r\n    fontSize: \"14px\",\r\n  },\r\n  textarea: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"4px\",\r\n    fontSize: \"14px\",\r\n    minHeight: \"80px\",\r\n    resize: \"vertical\",\r\n  },\r\n  select: {\r\n    padding: \"8px\",\r\n    marginRight: \"10px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"4px\",\r\n    fontSize: \"14px\",\r\n  },\r\n  formActions: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n    marginTop: \"15px\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#3498db\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"8px 16px\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"14px\",\r\n  },\r\n  buttonSecondary: {\r\n    backgroundColor: \"#95a5a6\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"8px 16px\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"14px\",\r\n  },\r\n  buttonDanger: {\r\n    backgroundColor: \"#e74c3c\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    padding: \"8px 16px\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"14px\",\r\n  },\r\n  noBoard: {\r\n    textAlign: \"center\",\r\n    padding: \"50px\",\r\n    color: \"#7f8c8d\",\r\n  },\r\n};\r\n\r\nexport default TeamCollaborationBoard;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,MAAMC,eAAe,GAAG;EACtBC,GAAG,EAAE,SAAS;EACdC,MAAM,EAAE,SAAS;EACjBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,YAAY;EAAEC;AAAa,CAAC,kBAC1DZ,OAAA;EAAKa,KAAK,EAAEC,MAAM,CAACC,MAAO;EAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}