{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Intel\\\\Desktop\\\\programs\\\\scriptGuru\\\\trello\\\\src\\\\pages\\\\TeamCollaborationBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BoardList from \"../components/BoardList/BoardList\";\nimport TaskForm from \"../components/TaskForm/TaskForm\";\nimport Column from \"../components/Column/Column\";\nimport BoardForm from \"../components/BoardForm/BoardForm\";\nimport { DndContext, closestCenter } from \"@dnd-kit/core\";\n// import { arrayMove } from \"@dnd-kit/sortable\"; // keep only if you plan to use it\nimport { fetchBoards } from \"../api/boards\";\nimport { fetchTasksForBoard, updateTask } from \"../api/tasks\";\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeamCollaborationBoard = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [selectedBoard, setSelectedBoard] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  useEffect(() => {\n    const loadBoards = async () => {\n      const boards = await fetchBoards();\n      setBoards(boards);\n      if (boards.length > 0 && !selectedBoard) setSelectedBoard(boards[0]);\n    };\n    loadBoards();\n  }, [selectedBoard]);\n  useEffect(() => {\n    const loadTasks = async () => {\n      if (!selectedBoard) return;\n      const data = await fetchTasksForBoard(selectedBoard._id);\n      setTasks(data);\n    };\n    loadTasks();\n  }, [selectedBoard]);\n  const handleBoardCreated = newBoard => {\n    setBoards([newBoard, ...boards]);\n    setSelectedBoard(newBoard);\n  };\n  const handleTaskCreated = newTask => setTasks([newTask, ...tasks]);\n  const handleTaskUpdate = updatedTask => setTasks(tasks.map(t => t._id === updatedTask._id ? updatedTask : t));\n  const handleTaskDelete = taskId => setTasks(tasks.filter(task => task._id !== taskId));\n  const filteredTasks = status => tasks.filter(task => task.status === status);\n  const handleDragEnd = async event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over || !active || active.id === over.id) return;\n    const taskId = active.id;\n    const newStatus = over.id;\n    const task = tasks.find(t => t._id === taskId);\n    if (!task || task.status === newStatus) return;\n    const updated = await updateTask(taskId, {\n      status: newStatus\n    });\n    handleTaskUpdate(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${sidebarOpen ? \"open\" : \"closed\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [sidebarOpen && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setSidebarOpen(!sidebarOpen),\n          children: sidebarOpen ? \"←\" : \"→\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), sidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-content\",\n        children: [/*#__PURE__*/_jsxDEV(BoardForm, {\n          onBoardCreated: handleBoardCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BoardList, {\n          boards: boards,\n          onSelect: setSelectedBoard,\n          selectedBoard: selectedBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      collisionDetection: closestCenter,\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: selectedBoard ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: selectedBoard.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), selectedBoard.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedBoard.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n              boardId: selectedBoard._id,\n              onTaskCreated: handleTaskCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-columns\",\n            children: [\"To Do\", \"In Progress\", \"Done\"].map(status => /*#__PURE__*/_jsxDEV(Column, {\n              title: status,\n              tasks: filteredTasks(status),\n              onUpdateTask: handleTaskUpdate,\n              onDeleteTask: handleTaskDelete\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-board\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to Team Collaboration Board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a board from the sidebar or create a new one to get started!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamCollaborationBoard, \"WeiVJGUR4O7Wwfb3NZ67cVE4+vk=\");\n_c = TeamCollaborationBoard;\nexport default TeamCollaborationBoard;\nvar _c;\n$RefreshReg$(_c, \"TeamCollaborationBoard\");","map":{"version":3,"names":["React","useEffect","useState","BoardList","TaskForm","Column","BoardForm","DndContext","closestCenter","fetchBoards","fetchTasksForBoard","updateTask","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamCollaborationBoard","_s","boards","setBoards","selectedBoard","setSelectedBoard","tasks","setTasks","sidebarOpen","setSidebarOpen","loadBoards","length","loadTasks","data","_id","handleBoardCreated","newBoard","handleTaskCreated","newTask","handleTaskUpdate","updatedTask","map","t","handleTaskDelete","taskId","filter","task","filteredTasks","status","handleDragEnd","event","active","over","id","newStatus","find","updated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onBoardCreated","onSelect","collisionDetection","onDragEnd","name","description","boardId","onTaskCreated","title","onUpdateTask","onDeleteTask","_c","$RefreshReg$"],"sources":["C:/Users/Intel/Desktop/programs/scriptGuru/trello/src/pages/TeamCollaborationBoard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport BoardList from \"../components/BoardList/BoardList\";\r\nimport TaskForm from \"../components/TaskForm/TaskForm\";\r\nimport Column from \"../components/Column/Column\";\r\nimport BoardForm from \"../components/BoardForm/BoardForm\";\r\nimport { DndContext, closestCenter } from \"@dnd-kit/core\";\r\n// import { arrayMove } from \"@dnd-kit/sortable\"; // keep only if you plan to use it\r\nimport { fetchBoards } from \"../api/boards\";\r\nimport { fetchTasksForBoard, updateTask } from \"../api/tasks\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst TeamCollaborationBoard = () => {\r\n  const [boards, setBoards] = useState([]);\r\n  const [selectedBoard, setSelectedBoard] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadBoards = async () => {\r\n      const boards = await fetchBoards();\r\n      setBoards(boards);\r\n      if (boards.length > 0 && !selectedBoard) setSelectedBoard(boards[0]);\r\n    };\r\n    loadBoards();\r\n  }, [selectedBoard]);\r\n\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      if (!selectedBoard) return;\r\n      const data = await fetchTasksForBoard(selectedBoard._id);\r\n      setTasks(data);\r\n    };\r\n    loadTasks();\r\n  }, [selectedBoard]);\r\n\r\n  const handleBoardCreated = (newBoard) => {\r\n    setBoards([newBoard, ...boards]);\r\n    setSelectedBoard(newBoard);\r\n  };\r\n\r\n  const handleTaskCreated = (newTask) => setTasks([newTask, ...tasks]);\r\n\r\n  const handleTaskUpdate = (updatedTask) =>\r\n    setTasks(tasks.map((t) => (t._id === updatedTask._id ? updatedTask : t)));\r\n\r\n  const handleTaskDelete = (taskId) =>\r\n    setTasks(tasks.filter((task) => task._id !== taskId));\r\n\r\n  const filteredTasks = (status) =>\r\n    tasks.filter((task) => task.status === status);\r\n\r\n  const handleDragEnd = async (event) => {\r\n    const { active, over } = event;\r\n\r\n    if (!over || !active || active.id === over.id) return;\r\n\r\n    const taskId = active.id;\r\n    const newStatus = over.id;\r\n\r\n    const task = tasks.find((t) => t._id === taskId);\r\n    if (!task || task.status === newStatus) return;\r\n\r\n    const updated = await updateTask(taskId, { status: newStatus });\r\n    handleTaskUpdate(updated);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className={`sidebar ${sidebarOpen ? \"open\" : \"closed\"}`}>\r\n        <div className=\"sidebar-header\">\r\n          {sidebarOpen && <h2>Boards</h2>}\r\n\r\n          <button\r\n            className=\"sidebar-toggle\"\r\n            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n          >\r\n            {sidebarOpen ? \"←\" : \"→\"}\r\n          </button>\r\n        </div>\r\n\r\n        {sidebarOpen && (\r\n          <div className=\"sidebar-content\">\r\n            <BoardForm onBoardCreated={handleBoardCreated} />\r\n\r\n            <BoardList\r\n              boards={boards}\r\n              onSelect={setSelectedBoard}\r\n              selectedBoard={selectedBoard}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\r\n        <div className=\"main-content\">\r\n          {selectedBoard ? (\r\n            <>\r\n              <div className=\"board-header\">\r\n                <h1>{selectedBoard.name}</h1>\r\n                {selectedBoard.description && (\r\n                  <p>{selectedBoard.description}</p>\r\n                )}\r\n                <TaskForm\r\n                  boardId={selectedBoard._id}\r\n                  onTaskCreated={handleTaskCreated}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"board-columns\">\r\n                {[\"To Do\", \"In Progress\", \"Done\"].map((status) => (\r\n                  <Column\r\n                    key={status}\r\n                    title={status}\r\n                    tasks={filteredTasks(status)}\r\n                    onUpdateTask={handleTaskUpdate}\r\n                    onDeleteTask={handleTaskDelete}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-board\">\r\n              <h2>Welcome to Team Collaboration Board</h2>\r\n              <p>\r\n                Select a board from the sidebar or create a new one to get\r\n                started!\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DndContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamCollaborationBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}