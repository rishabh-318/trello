{"ast":null,"code":"const API_BASE=process.env.REACT_APP_BASE_URL;// Centralized response checker\nconst checkResponse=async res=>{if(!res.ok){let errorData={};try{errorData=await res.json();}catch{errorData.error=\"Unknown error\";}throw new Error(errorData.error||\"API request failed\");}try{return await res.json();}catch{return{};// fallback for DELETE with no body\n}};// GET all tasks for a board\nexport const fetchTasksForBoard=async boardId=>{const res=await fetch(`${API_BASE}/boards/${boardId}/tasks`);return checkResponse(res);};// POST a new task to a board\nexport const createTask=async(boardId,taskData)=>{const res=await fetch(`${API_BASE}/boards/${boardId}/tasks`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(taskData)});return checkResponse(res);};// PUT update task by ID\nexport const updateTask=async(taskId,updatedData)=>{const res=await fetch(`${API_BASE}/tasks/${taskId}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(updatedData)});return checkResponse(res);};// DELETE task by ID\nexport const deleteTask=async taskId=>{const res=await fetch(`${API_BASE}/tasks/${taskId}`,{method:\"DELETE\"});return checkResponse(res);// returns {} if no JSON body\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_BASE_URL","checkResponse","res","ok","errorData","json","error","Error","fetchTasksForBoard","boardId","fetch","createTask","taskData","method","headers","body","JSON","stringify","updateTask","taskId","updatedData","deleteTask"],"sources":["C:/Users/Intel/Desktop/programs/scriptGuru/trello/src/api/tasks.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_BASE_URL;\r\n\r\n// Centralized response checker\r\nconst checkResponse = async (res) => {\r\n  if (!res.ok) {\r\n    let errorData = {};\r\n    try {\r\n      errorData = await res.json();\r\n    } catch {\r\n      errorData.error = \"Unknown error\";\r\n    }\r\n    throw new Error(errorData.error || \"API request failed\");\r\n  }\r\n\r\n  try {\r\n    return await res.json();\r\n  } catch {\r\n    return {}; // fallback for DELETE with no body\r\n  }\r\n};\r\n\r\n// GET all tasks for a board\r\nexport const fetchTasksForBoard = async (boardId) => {\r\n  const res = await fetch(`${API_BASE}/boards/${boardId}/tasks`);\r\n  return checkResponse(res);\r\n};\r\n\r\n// POST a new task to a board\r\nexport const createTask = async (boardId, taskData) => {\r\n  const res = await fetch(`${API_BASE}/boards/${boardId}/tasks`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(taskData),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\n// PUT update task by ID\r\nexport const updateTask = async (taskId, updatedData) => {\r\n  const res = await fetch(`${API_BASE}/tasks/${taskId}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(updatedData),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\n// DELETE task by ID\r\nexport const deleteTask = async (taskId) => {\r\n  const res = await fetch(`${API_BASE}/tasks/${taskId}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  return checkResponse(res); // returns {} if no JSON body\r\n};\r\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAE/C;AACA,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,GAAG,EAAK,CACnC,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CACX,GAAI,CAAAC,SAAS,CAAG,CAAC,CAAC,CAClB,GAAI,CACFA,SAAS,CAAG,KAAM,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,KAAM,CACND,SAAS,CAACE,KAAK,CAAG,eAAe,CACnC,CACA,KAAM,IAAI,CAAAC,KAAK,CAACH,SAAS,CAACE,KAAK,EAAI,oBAAoB,CAAC,CAC1D,CAEA,GAAI,CACF,MAAO,MAAM,CAAAJ,GAAG,CAACG,IAAI,CAAC,CAAC,CACzB,CAAE,KAAM,CACN,MAAO,CAAC,CAAC,CAAE;AACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,kBAAkB,CAAG,KAAO,CAAAC,OAAO,EAAK,CACnD,KAAM,CAAAP,GAAG,CAAG,KAAM,CAAAQ,KAAK,CAAC,GAAGb,QAAQ,WAAWY,OAAO,QAAQ,CAAC,CAC9D,MAAO,CAAAR,aAAa,CAACC,GAAG,CAAC,CAC3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,UAAU,CAAG,KAAAA,CAAOF,OAAO,CAAEG,QAAQ,GAAK,CACrD,KAAM,CAAAV,GAAG,CAAG,KAAM,CAAAQ,KAAK,CAAC,GAAGb,QAAQ,WAAWY,OAAO,QAAQ,CAAE,CAC7DI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAC/B,CAAC,CAAC,CACF,MAAO,CAAAX,aAAa,CAACC,GAAG,CAAC,CAC3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAgB,UAAU,CAAG,KAAAA,CAAOC,MAAM,CAAEC,WAAW,GAAK,CACvD,KAAM,CAAAlB,GAAG,CAAG,KAAM,CAAAQ,KAAK,CAAC,GAAGb,QAAQ,UAAUsB,MAAM,EAAE,CAAE,CACrDN,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACG,WAAW,CAClC,CAAC,CAAC,CACF,MAAO,CAAAnB,aAAa,CAACC,GAAG,CAAC,CAC3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAmB,UAAU,CAAG,KAAO,CAAAF,MAAM,EAAK,CAC1C,KAAM,CAAAjB,GAAG,CAAG,KAAM,CAAAQ,KAAK,CAAC,GAAGb,QAAQ,UAAUsB,MAAM,EAAE,CAAE,CACrDN,MAAM,CAAE,QACV,CAAC,CAAC,CACF,MAAO,CAAAZ,aAAa,CAACC,GAAG,CAAC,CAAE;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}