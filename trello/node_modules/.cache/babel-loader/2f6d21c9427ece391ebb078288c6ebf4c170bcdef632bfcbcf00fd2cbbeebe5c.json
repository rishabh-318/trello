{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Intel\\\\Desktop\\\\programs\\\\scriptGuru\\\\trello\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// Main App component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [selectedBoard, setSelectedBoard] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  // Load boards on mount\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await fetch(`${API_BASE}/boards`);\n        const data = await response.json();\n        setBoards(data);\n\n        // Auto-select first board if available\n        if (data.length > 0 && !selectedBoard) {\n          setSelectedBoard(data[0]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching boards:\", error);\n      }\n    };\n    fetchBoards();\n  }, [selectedBoard]);\n\n  // Load tasks when board is selected\n  useEffect(() => {\n    if (selectedBoard) {\n      const fetchTasks = async () => {\n        try {\n          const response = await fetch(`${API_BASE}/boards/${selectedBoard._id}/tasks`);\n          const data = await response.json();\n          setTasks(data);\n        } catch (error) {\n          console.error(\"Error fetching tasks:\", error);\n        }\n      };\n      fetchTasks();\n    }\n  }, [selectedBoard]);\n  const handleBoardSelect = board => {\n    setSelectedBoard(board);\n  };\n  const handleBoardCreated = newBoard => {\n    setBoards([newBoard, ...boards]);\n    setSelectedBoard(newBoard);\n  };\n  const handleTaskCreated = newTask => {\n    setTasks([newTask, ...tasks]);\n  };\n  const handleTaskUpdate = updatedTask => {\n    setTasks(tasks.map(task => task._id === updatedTask._id ? updatedTask : task));\n  };\n  const handleTaskDelete = taskId => {\n    setTasks(tasks.filter(task => task._id !== taskId));\n  };\n  const todoTasks = tasks.filter(task => task.status === \"To Do\");\n  const inProgressTasks = tasks.filter(task => task.status === \"In Progress\");\n  const doneTasks = tasks.filter(task => task.status === \"Done\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.sidebar,\n        ...(sidebarOpen ? styles.sidebarOpen : styles.sidebarClosed)\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sidebarHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.sidebarToggle,\n          onClick: () => setSidebarOpen(!sidebarOpen),\n          children: sidebarOpen ? \"←\" : \"→\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), sidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sidebarContent,\n        children: [/*#__PURE__*/_jsxDEV(NewBoardForm, {\n          onBoardCreated: handleBoardCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.boardsList,\n          children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n            board: board,\n            onSelect: handleBoardSelect,\n            isSelected: (selectedBoard === null || selectedBoard === void 0 ? void 0 : selectedBoard._id) === board._id\n          }, board._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainContent,\n      children: selectedBoard ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.boardHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: selectedBoard.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), selectedBoard.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedBoard.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n            boardId: selectedBoard._id,\n            onTaskCreated: handleTaskCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.boardColumns,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"To Do\",\n            tasks: todoTasks,\n            onUpdateTask: handleTaskUpdate,\n            onDeleteTask: handleTaskDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"In Progress\",\n            tasks: inProgressTasks,\n            onUpdateTask: handleTaskUpdate,\n            onDeleteTask: handleTaskDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Done\",\n            tasks: doneTasks,\n            onUpdateTask: handleTaskUpdate,\n            onDeleteTask: handleTaskDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.noBoard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Team Collaboration Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a board from the sidebar or create a new one to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles\n_s(App, \"WeiVJGUR4O7Wwfb3NZ67cVE4+vk=\");\n_c = App;\nconst styles = {\n  app: {\n    display: \"flex\",\n    height: \"100vh\",\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f5f5f5\"\n  },\n  sidebar: {\n    backgroundColor: \"#2c3e50\",\n    color: \"white\",\n    transition: \"width 0.3s ease\"\n  },\n  sidebarOpen: {\n    width: \"300px\"\n  },\n  sidebarClosed: {\n    width: \"60px\"\n  },\n  sidebarHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    borderBottom: \"1px solid #34495e\"\n  },\n  sidebarToggle: {\n    background: \"none\",\n    border: \"none\",\n    color: \"white\",\n    fontSize: \"18px\",\n    cursor: \"pointer\"\n  },\n  sidebarContent: {\n    padding: \"20px\"\n  },\n  boardsList: {\n    marginTop: \"20px\"\n  },\n  boardItem: {\n    padding: \"15px\",\n    margin: \"10px 0\",\n    backgroundColor: \"#34495e\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.2s\"\n  },\n  boardItemSelected: {\n    backgroundColor: \"#3498db\"\n  },\n  mainContent: {\n    flex: 1,\n    padding: \"20px\",\n    overflow: \"auto\"\n  },\n  boardHeader: {\n    marginBottom: \"30px\"\n  },\n  boardColumns: {\n    display: \"flex\",\n    gap: \"20px\",\n    height: \"calc(100vh - 200px)\"\n  },\n  column: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    borderRadius: \"8px\",\n    padding: \"20px\",\n    minHeight: \"500px\"\n  },\n  tasks: {\n    marginTop: \"15px\"\n  },\n  task: {\n    backgroundColor: \"white\",\n    padding: \"15px\",\n    marginBottom: \"10px\",\n    borderRadius: \"5px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n  },\n  taskEditing: {\n    border: \"2px solid #3498db\"\n  },\n  taskHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"10px\"\n  },\n  priorityBadge: {\n    padding: \"4px 8px\",\n    borderRadius: \"12px\",\n    fontSize: \"12px\",\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  assignedTo: {\n    fontSize: \"14px\",\n    color: \"#666\",\n    marginBottom: \"5px\"\n  },\n  dueDate: {\n    fontSize: \"14px\",\n    color: \"#666\",\n    marginBottom: \"10px\"\n  },\n  taskControls: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"10px\"\n  },\n  taskActions: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"10px\"\n  },\n  newTaskBtn: {\n    backgroundColor: \"#27ae60\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"12px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\"\n  },\n  newBoardBtn: {\n    backgroundColor: \"#3498db\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"12px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n    width: \"100%\"\n  },\n  newTaskForm: {\n    backgroundColor: \"white\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n    marginBottom: \"20px\"\n  },\n  newBoardForm: {\n    backgroundColor: \"#34495e\",\n    padding: \"15px\",\n    borderRadius: \"5px\",\n    marginBottom: \"20px\"\n  },\n  input: {\n    width: \"100%\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\"\n  },\n  textarea: {\n    width: \"100%\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n    minHeight: \"80px\",\n    resize: \"vertical\"\n  },\n  select: {\n    padding: \"8px\",\n    marginRight: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\"\n  },\n  formActions: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    backgroundColor: \"#3498db\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\"\n  },\n  buttonSecondary: {\n    backgroundColor: \"#95a5a6\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\"\n  },\n  buttonDanger: {\n    backgroundColor: \"#e74c3c\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\"\n  },\n  noBoard: {\n    textAlign: \"center\",\n    padding: \"50px\",\n    color: \"#7f8c8d\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","boards","setBoards","selectedBoard","setSelectedBoard","tasks","setTasks","sidebarOpen","setSidebarOpen","fetchBoards","response","fetch","API_BASE","data","json","length","error","console","fetchTasks","_id","handleBoardSelect","board","handleBoardCreated","newBoard","handleTaskCreated","newTask","handleTaskUpdate","updatedTask","map","task","handleTaskDelete","taskId","filter","todoTasks","status","inProgressTasks","doneTasks","style","styles","app","children","sidebar","sidebarClosed","sidebarHeader","fileName","_jsxFileName","lineNumber","columnNumber","sidebarToggle","onClick","sidebarContent","NewBoardForm","onBoardCreated","boardsList","Board","onSelect","isSelected","mainContent","boardHeader","name","description","NewTaskForm","boardId","onTaskCreated","boardColumns","Column","title","onUpdateTask","onDeleteTask","noBoard","_c","display","height","fontFamily","backgroundColor","color","transition","width","justifyContent","alignItems","padding","borderBottom","background","border","fontSize","cursor","marginTop","boardItem","margin","borderRadius","boardItemSelected","flex","overflow","marginBottom","gap","column","minHeight","boxShadow","taskEditing","taskHeader","priorityBadge","fontWeight","assignedTo","dueDate","taskControls","taskActions","newTaskBtn","newBoardBtn","newTaskForm","newBoardForm","input","textarea","resize","select","marginRight","formActions","button","buttonSecondary","buttonDanger","textAlign","$RefreshReg$"],"sources":["C:/Users/Intel/Desktop/programs/scriptGuru/trello/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// Main App component\nconst App = () => {\n  const [boards, setBoards] = useState([]);\n  const [selectedBoard, setSelectedBoard] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  // Load boards on mount\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await fetch(`${API_BASE}/boards`);\n        const data = await response.json();\n        setBoards(data);\n\n        // Auto-select first board if available\n        if (data.length > 0 && !selectedBoard) {\n          setSelectedBoard(data[0]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching boards:\", error);\n      }\n    };\n\n    fetchBoards();\n  }, [selectedBoard]);\n\n  // Load tasks when board is selected\n  useEffect(() => {\n    if (selectedBoard) {\n      const fetchTasks = async () => {\n        try {\n          const response = await fetch(\n            `${API_BASE}/boards/${selectedBoard._id}/tasks`\n          );\n          const data = await response.json();\n          setTasks(data);\n        } catch (error) {\n          console.error(\"Error fetching tasks:\", error);\n        }\n      };\n\n      fetchTasks();\n    }\n  }, [selectedBoard]);\n\n  const handleBoardSelect = (board) => {\n    setSelectedBoard(board);\n  };\n\n  const handleBoardCreated = (newBoard) => {\n    setBoards([newBoard, ...boards]);\n    setSelectedBoard(newBoard);\n  };\n\n  const handleTaskCreated = (newTask) => {\n    setTasks([newTask, ...tasks]);\n  };\n\n  const handleTaskUpdate = (updatedTask) => {\n    setTasks(\n      tasks.map((task) => (task._id === updatedTask._id ? updatedTask : task))\n    );\n  };\n\n  const handleTaskDelete = (taskId) => {\n    setTasks(tasks.filter((task) => task._id !== taskId));\n  };\n\n  const todoTasks = tasks.filter((task) => task.status === \"To Do\");\n  const inProgressTasks = tasks.filter((task) => task.status === \"In Progress\");\n  const doneTasks = tasks.filter((task) => task.status === \"Done\");\n\n  return (\n    <div style={styles.app}>\n      <div\n        style={{\n          ...styles.sidebar,\n          ...(sidebarOpen ? styles.sidebarOpen : styles.sidebarClosed),\n        }}\n      >\n        <div style={styles.sidebarHeader}>\n          <h2>Boards</h2>\n          <button\n            style={styles.sidebarToggle}\n            onClick={() => setSidebarOpen(!sidebarOpen)}\n          >\n            {sidebarOpen ? \"←\" : \"→\"}\n          </button>\n        </div>\n\n        {sidebarOpen && (\n          <div style={styles.sidebarContent}>\n            <NewBoardForm onBoardCreated={handleBoardCreated} />\n            <div style={styles.boardsList}>\n              {boards.map((board) => (\n                <Board\n                  key={board._id}\n                  board={board}\n                  onSelect={handleBoardSelect}\n                  isSelected={selectedBoard?._id === board._id}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div style={styles.mainContent}>\n        {selectedBoard ? (\n          <>\n            <div style={styles.boardHeader}>\n              <h1>{selectedBoard.name}</h1>\n              {selectedBoard.description && <p>{selectedBoard.description}</p>}\n              <NewTaskForm\n                boardId={selectedBoard._id}\n                onTaskCreated={handleTaskCreated}\n              />\n            </div>\n\n            <div style={styles.boardColumns}>\n              <Column\n                title=\"To Do\"\n                tasks={todoTasks}\n                onUpdateTask={handleTaskUpdate}\n                onDeleteTask={handleTaskDelete}\n              />\n              <Column\n                title=\"In Progress\"\n                tasks={inProgressTasks}\n                onUpdateTask={handleTaskUpdate}\n                onDeleteTask={handleTaskDelete}\n              />\n              <Column\n                title=\"Done\"\n                tasks={doneTasks}\n                onUpdateTask={handleTaskUpdate}\n                onDeleteTask={handleTaskDelete}\n              />\n            </div>\n          </>\n        ) : (\n          <div style={styles.noBoard}>\n            <h2>Welcome to Team Collaboration Board</h2>\n            <p>\n              Select a board from the sidebar or create a new one to get\n              started!\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Styles\nconst styles = {\n  app: {\n    display: \"flex\",\n    height: \"100vh\",\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f5f5f5\",\n  },\n  sidebar: {\n    backgroundColor: \"#2c3e50\",\n    color: \"white\",\n    transition: \"width 0.3s ease\",\n  },\n  sidebarOpen: {\n    width: \"300px\",\n  },\n  sidebarClosed: {\n    width: \"60px\",\n  },\n  sidebarHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    borderBottom: \"1px solid #34495e\",\n  },\n  sidebarToggle: {\n    background: \"none\",\n    border: \"none\",\n    color: \"white\",\n    fontSize: \"18px\",\n    cursor: \"pointer\",\n  },\n  sidebarContent: {\n    padding: \"20px\",\n  },\n  boardsList: {\n    marginTop: \"20px\",\n  },\n  boardItem: {\n    padding: \"15px\",\n    margin: \"10px 0\",\n    backgroundColor: \"#34495e\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.2s\",\n  },\n  boardItemSelected: {\n    backgroundColor: \"#3498db\",\n  },\n  mainContent: {\n    flex: 1,\n    padding: \"20px\",\n    overflow: \"auto\",\n  },\n  boardHeader: {\n    marginBottom: \"30px\",\n  },\n  boardColumns: {\n    display: \"flex\",\n    gap: \"20px\",\n    height: \"calc(100vh - 200px)\",\n  },\n  column: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    borderRadius: \"8px\",\n    padding: \"20px\",\n    minHeight: \"500px\",\n  },\n  tasks: {\n    marginTop: \"15px\",\n  },\n  task: {\n    backgroundColor: \"white\",\n    padding: \"15px\",\n    marginBottom: \"10px\",\n    borderRadius: \"5px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n  },\n  taskEditing: {\n    border: \"2px solid #3498db\",\n  },\n  taskHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"10px\",\n  },\n  priorityBadge: {\n    padding: \"4px 8px\",\n    borderRadius: \"12px\",\n    fontSize: \"12px\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  assignedTo: {\n    fontSize: \"14px\",\n    color: \"#666\",\n    marginBottom: \"5px\",\n  },\n  dueDate: {\n    fontSize: \"14px\",\n    color: \"#666\",\n    marginBottom: \"10px\",\n  },\n  taskControls: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"10px\",\n  },\n  taskActions: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"10px\",\n  },\n  newTaskBtn: {\n    backgroundColor: \"#27ae60\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"12px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n  },\n  newBoardBtn: {\n    backgroundColor: \"#3498db\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"12px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n    width: \"100%\",\n  },\n  newTaskForm: {\n    backgroundColor: \"white\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n    marginBottom: \"20px\",\n  },\n  newBoardForm: {\n    backgroundColor: \"#34495e\",\n    padding: \"15px\",\n    borderRadius: \"5px\",\n    marginBottom: \"20px\",\n  },\n  input: {\n    width: \"100%\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n  },\n  textarea: {\n    width: \"100%\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n    minHeight: \"80px\",\n    resize: \"vertical\",\n  },\n  select: {\n    padding: \"8px\",\n    marginRight: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n  },\n  formActions: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"15px\",\n  },\n  button: {\n    backgroundColor: \"#3498db\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\",\n  },\n  buttonSecondary: {\n    backgroundColor: \"#95a5a6\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\",\n  },\n  buttonDanger: {\n    backgroundColor: \"#e74c3c\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\",\n  },\n  noBoard: {\n    textAlign: \"center\",\n    padding: \"50px\",\n    color: \"#7f8c8d\",\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}